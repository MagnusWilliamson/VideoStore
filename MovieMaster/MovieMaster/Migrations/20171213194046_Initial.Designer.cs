// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MovieMaster.Models;
using System;

namespace MovieMaster.Migrations
{
    [DbContext(typeof(MovieMasterContext))]
    [Migration("20171213194046_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieMaster.Models.Adress", b =>
                {
                    b.Property<string>("AdressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CustomerId");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("AdressId");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("MovieMaster.Models.Contract", b =>
                {
                    b.Property<string>("ContractId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerId");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("ContractId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("MovieMaster.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MovieMaster.Models.Movie", b =>
                {
                    b.Property<string>("MovieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgeLimit");

                    b.Property<string>("ContractId");

                    b.Property<string>("Description");

                    b.Property<string>("Genre");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Titel");

                    b.HasKey("MovieId");

                    b.HasIndex("ContractId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MovieMaster.Models.Movie", b =>
                {
                    b.HasOne("MovieMaster.Models.Contract")
                        .WithMany("MovieId")
                        .HasForeignKey("ContractId");
                });
#pragma warning restore 612, 618
        }
    }
}
